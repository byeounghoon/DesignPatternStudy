//
//  RepositoryInteractor.swift
//  CleanSwift
//
//  Created by ByoungHoon Yun on 15/06/2019.
//  Copyright (c) 2019 ByoungHoon. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RepositoryBusinessLogic
{
    func requestRepository(request: Repository.Something.Request)
}

protocol RepositoryDataStore
{
    //var name: String { get set }
}

class RepositoryInteractor: RepositoryBusinessLogic, RepositoryDataStore
{
    var presenter: RepositoryPresentationLogic?
    var worker = RepositoryWorker()
    
    // MARK: Do something
    
    func requestRepository(request: Repository.Something.Request)
    {
        worker.requestRepositories(keyword: request.keyword) { (repositories) in
            let response = Repository.Something.Response(listData: repositories)
            self.presenter?.presentSomething(response: response)
        }
    }
}

